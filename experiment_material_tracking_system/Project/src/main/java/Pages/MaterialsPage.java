/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package Pages;

import Classes.Material;
import DataBases.MaterialDB;
import Classes.User;
import java.sql.Connection;
import java.util.ArrayList;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author omeryasironal
 */
public class MaterialsPage extends javax.swing.JFrame {

    // tablo için model tanımlanır ve değiştirilemez yapılır
    DefaultTableModel tbl_table_model = new DefaultTableModel() {
        @Override
        public boolean isCellEditable(int row, int column) {
            return false;
        }
    };

    /**
     * Creates new form AddMaterials
     */
    StartPage sp;
    User user;

    public MaterialsPage(StartPage sp, User user) {
        this.setLocation(500, 500);

        initComponents();
        configureTableModel();
        this.sp = sp;
        fillTable();
        this.user = user;
        if (user.getType().equals("öğretmen")) {
            btn_add1.setEnabled(true);
        } else {
            btn_add1.setEnabled(false);
        }
    }

    public MaterialsPage() {
        initComponents();
        configureTableModel();
        fillTable();
        this.setLocation(300, 400);

    }

    // Tabloya sütunları ekler
    private void configureTableModel() {
        tbl_table_model.addColumn("Id"); // ID sütunu ekleniyor
        tbl_table_model.addColumn("Malzeme Adı");
        tbl_table_model.addColumn("Malzeme Tipi");
        tbl_table_model.addColumn("Malzeme Stok Sayısı");
        tbl_table_model.addColumn("Malzeme Alış Tarihi");
    }
    
    // Malzemeler tablosuna MySQL'den tüm malzemleri ve bilgilerini çeker.
    private void fillTable() {
        ArrayList<Material> materials = MaterialDB.getMaterials();
        tbl_table_model.setRowCount(0);

        for (Material material : materials) {
            // ID, isim, tip, stok ve tarih bilgilerini sırasıyla ekliyoruz
            tbl_table_model.addRow(new Object[]{material.getId(), material.getMaterialName(), material.getMaterialType(), material.getStockStatus(), material.getDate()});
        }

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    private void initComponents() {//GEN-BEGIN:initComponents

        btn_add = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jButton1 = new javax.swing.JButton();
        txt_search = new javax.swing.JTextField();
        btn_add1 = new javax.swing.JButton();
        e = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setMinimumSize(new java.awt.Dimension(875, 395));
        setPreferredSize(new java.awt.Dimension(875, 395));
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        btn_add.setFont(new java.awt.Font("Arial Unicode MS", 0, 14)); // NOI18N
        btn_add.setText("Stok Yenileme");
        btn_add.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_addActionPerformed(evt);
            }
        });
        getContentPane().add(btn_add, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 290, 150, 40));

        jTable1.setModel(tbl_table_model);
        jTable1.setIgnoreRepaint(true);
        jScrollPane1.setViewportView(jTable1);

        getContentPane().add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 70, 590, 280));

        jButton1.setText("Arama");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(500, 20, 90, 30));

        txt_search.setToolTipText("Malzeme Adı veya Türü ile Arayabilirsiniz");
        getContentPane().add(txt_search, new org.netbeans.lib.awtextra.AbsoluteConstraints(330, 20, 130, 30));

        btn_add1.setFont(new java.awt.Font("Arial Unicode MS", 0, 14)); // NOI18N
        btn_add1.setText("Malzeme Ekle");
        btn_add1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_add1ActionPerformed(evt);
            }
        });
        getContentPane().add(btn_add1, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 100, 150, 40));

        e.setFont(new java.awt.Font("Arial Unicode MS", 0, 14)); // NOI18N
        e.setText("Malzeme Sil");
        e.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                eActionPerformed(evt);
            }
        });
        getContentPane().add(e, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 200, 150, 40));

        jButton2.setText("Geri");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton2, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 20, 90, 30));

        pack();
    }//GEN-END:initComponents


    private void btn_addActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_addActionPerformed
        int selectedRow = jTable1.getSelectedRow();
        if (selectedRow != -1) {
            int materialId = (int) jTable1.getValueAt(selectedRow, 0); // 0 indexli sütun malzeme ID'sini temsil ediyor (Bu değeri doğru sütuna göre ayarlamanız gerekebilir)
            String stockStr = JOptionPane.showInputDialog(this, "Yeni stok miktarını girin:", "Stok Yenileme", JOptionPane.INFORMATION_MESSAGE);
            if (stockStr != null) {
                try {
                    int newStock = Integer.parseInt(stockStr);
                    boolean isUpdated = MaterialDB.updateMaterialStock(materialId, newStock);
                    if (isUpdated) {
                        JOptionPane.showMessageDialog(this, "Stok miktarı başarıyla güncellendi", "Bilgi", JOptionPane.INFORMATION_MESSAGE);
                        jTable1.setValueAt(newStock, selectedRow, 3); // 3 indexli sütun stok miktarını temsil ediyor (Bu değeri doğru sütuna göre ayarlamanız gerekebilir)
                    } else {
                        JOptionPane.showMessageDialog(this, "Stok miktarı güncellenirken bir hata oluştu", "Hata!", JOptionPane.INFORMATION_MESSAGE);
                    }
                } catch (NumberFormatException e) {
                    JOptionPane.showMessageDialog(this, "Lütfen geçerli bir sayı girin", "Uyarı!", JOptionPane.INFORMATION_MESSAGE);
                }
            }
        } else {
            JOptionPane.showMessageDialog(this, "Lütfen stok miktarını güncellemek için bir malzeme seçin", "Uyarı", JOptionPane.INFORMATION_MESSAGE);
        }


    }//GEN-LAST:event_btn_addActionPerformed


    // Veri tabanındaki Malzemeler tablosunda arama yapmanı sağlar.
    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed

        String search = txt_search.getText();
        Connection con = null;
        tbl_table_model.setRowCount(0);
        ArrayList<Material> materialList = MaterialDB.searchByNameOrTypeMaterials(search);
        for (Material material : materialList) {
            tbl_table_model.addRow(new Object[]{material.getId(), material.name, material.type, material.stock, material.date});
        }

    }//GEN-LAST:event_jButton1ActionPerformed

    // Yeni malzeme ekleme sayfasına yönlendirir
    private void btn_add1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_add1ActionPerformed

        MaterialAddingPage map = new MaterialAddingPage(this, this.user, this.sp);
        map.setVisible(true);
        dispose();

    }//GEN-LAST:event_btn_add1ActionPerformed

    // Tablodan seçilmiş olan malzemeyi hem tablodan hemde veritabından silinmesini sağlar
    private void eActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_eActionPerformed

        int row = jTable1.getSelectedRow();

        if (row == -1) {
            JOptionPane.showMessageDialog(this, "Lütfen silmek istediğiniz malzemeyi seçiniz.", "Uyarı!", JOptionPane.INFORMATION_MESSAGE);
        } else {
            int id = (int) jTable1.getValueAt(row, 0);
            MaterialDB.deleteMaterial(id);
            tbl_table_model.removeRow(row);
            JOptionPane.showMessageDialog(this, "Malzeme silindi.", "Bilgi", JOptionPane.INFORMATION_MESSAGE);
        }

        jTable1.repaint();

    }//GEN-LAST:event_eActionPerformed

    // Bir önceki sayfaya yönlendirir
    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed

        sp.setVisible(true);
        dispose();

    }//GEN-LAST:event_jButton2ActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btn_add;
    private javax.swing.JButton btn_add1;
    private javax.swing.JButton e;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JTextField txt_search;
    // End of variables declaration//GEN-END:variables
}
